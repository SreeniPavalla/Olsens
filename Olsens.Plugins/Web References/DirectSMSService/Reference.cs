//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Olsens.Plugins.DirectSMSService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="SmsGatewaySoapBinding", Namespace="urn:SmsGateway")]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(InboundSmsMessage))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SmsReply))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SmsMessageMobile))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SmsMessageList))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(SmsMessage))]
    public partial class SmsGatewayService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback connectOperationCompleted;
        
        private System.Threading.SendOrPostCallback disconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback connectWithLicenceOperationCompleted;
        
        private System.Threading.SendOrPostCallback reconnectOperationCompleted;
        
        private System.Threading.SendOrPostCallback getCurrentBalanceOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendBrandedSmsMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTwoWaySmsMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback scheduleBrandedSmsMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback scheduleTwoWaySmsMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendBrandedSmsMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTwoWaySmsMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendBrandedSmsMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback sendTwoWaySmsMessageListOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllSmsMessageRepliesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getSmsMessageRepliesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInboundSmsMessagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback getAllInboundSmsMessagesOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SmsGatewayService() {
            this.Url = global::Olsens.Plugins.Properties.Settings.Default.Olsens_Plugins_DirectSMSService_SmsGatewayService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event connectCompletedEventHandler connectCompleted;
        
        /// <remarks/>
        public event disconnectCompletedEventHandler disconnectCompleted;
        
        /// <remarks/>
        public event connectWithLicenceCompletedEventHandler connectWithLicenceCompleted;
        
        /// <remarks/>
        public event reconnectCompletedEventHandler reconnectCompleted;
        
        /// <remarks/>
        public event getCurrentBalanceCompletedEventHandler getCurrentBalanceCompleted;
        
        /// <remarks/>
        public event sendBrandedSmsMessageCompletedEventHandler sendBrandedSmsMessageCompleted;
        
        /// <remarks/>
        public event sendTwoWaySmsMessageCompletedEventHandler sendTwoWaySmsMessageCompleted;
        
        /// <remarks/>
        public event scheduleBrandedSmsMessageCompletedEventHandler scheduleBrandedSmsMessageCompleted;
        
        /// <remarks/>
        public event scheduleTwoWaySmsMessageCompletedEventHandler scheduleTwoWaySmsMessageCompleted;
        
        /// <remarks/>
        public event sendBrandedSmsMessagesCompletedEventHandler sendBrandedSmsMessagesCompleted;
        
        /// <remarks/>
        public event sendTwoWaySmsMessagesCompletedEventHandler sendTwoWaySmsMessagesCompleted;
        
        /// <remarks/>
        public event sendBrandedSmsMessageListCompletedEventHandler sendBrandedSmsMessageListCompleted;
        
        /// <remarks/>
        public event sendTwoWaySmsMessageListCompletedEventHandler sendTwoWaySmsMessageListCompleted;
        
        /// <remarks/>
        public event getAllSmsMessageRepliesCompletedEventHandler getAllSmsMessageRepliesCompleted;
        
        /// <remarks/>
        public event getSmsMessageRepliesCompletedEventHandler getSmsMessageRepliesCompleted;
        
        /// <remarks/>
        public event getInboundSmsMessagesCompletedEventHandler getInboundSmsMessagesCompleted;
        
        /// <remarks/>
        public event getAllInboundSmsMessagesCompletedEventHandler getAllInboundSmsMessagesCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("connectReturn")]
        public string connect(string in0, string in1) {
            object[] results = this.Invoke("connect", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void connectAsync(string in0, string in1) {
            this.connectAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void connectAsync(string in0, string in1, object userState) {
            if ((this.connectOperationCompleted == null)) {
                this.connectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconnectOperationCompleted);
            }
            this.InvokeAsync("connect", new object[] {
                        in0,
                        in1}, this.connectOperationCompleted, userState);
        }
        
        private void OnconnectOperationCompleted(object arg) {
            if ((this.connectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.connectCompleted(this, new connectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("disconnectReturn")]
        public bool disconnect(string in0) {
            object[] results = this.Invoke("disconnect", new object[] {
                        in0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void disconnectAsync(string in0) {
            this.disconnectAsync(in0, null);
        }
        
        /// <remarks/>
        public void disconnectAsync(string in0, object userState) {
            if ((this.disconnectOperationCompleted == null)) {
                this.disconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OndisconnectOperationCompleted);
            }
            this.InvokeAsync("disconnect", new object[] {
                        in0}, this.disconnectOperationCompleted, userState);
        }
        
        private void OndisconnectOperationCompleted(object arg) {
            if ((this.disconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.disconnectCompleted(this, new disconnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("connectWithLicenceReturn")]
        public string connectWithLicence(string in0, string in1, string in2) {
            object[] results = this.Invoke("connectWithLicence", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void connectWithLicenceAsync(string in0, string in1, string in2) {
            this.connectWithLicenceAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void connectWithLicenceAsync(string in0, string in1, string in2, object userState) {
            if ((this.connectWithLicenceOperationCompleted == null)) {
                this.connectWithLicenceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnconnectWithLicenceOperationCompleted);
            }
            this.InvokeAsync("connectWithLicence", new object[] {
                        in0,
                        in1,
                        in2}, this.connectWithLicenceOperationCompleted, userState);
        }
        
        private void OnconnectWithLicenceOperationCompleted(object arg) {
            if ((this.connectWithLicenceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.connectWithLicenceCompleted(this, new connectWithLicenceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("reconnectReturn")]
        public bool reconnect(string in0) {
            object[] results = this.Invoke("reconnect", new object[] {
                        in0});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void reconnectAsync(string in0) {
            this.reconnectAsync(in0, null);
        }
        
        /// <remarks/>
        public void reconnectAsync(string in0, object userState) {
            if ((this.reconnectOperationCompleted == null)) {
                this.reconnectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreconnectOperationCompleted);
            }
            this.InvokeAsync("reconnect", new object[] {
                        in0}, this.reconnectOperationCompleted, userState);
        }
        
        private void OnreconnectOperationCompleted(object arg) {
            if ((this.reconnectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.reconnectCompleted(this, new reconnectCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("getCurrentBalanceReturn")]
        public double getCurrentBalance(string in0) {
            object[] results = this.Invoke("getCurrentBalance", new object[] {
                        in0});
            return ((double)(results[0]));
        }
        
        /// <remarks/>
        public void getCurrentBalanceAsync(string in0) {
            this.getCurrentBalanceAsync(in0, null);
        }
        
        /// <remarks/>
        public void getCurrentBalanceAsync(string in0, object userState) {
            if ((this.getCurrentBalanceOperationCompleted == null)) {
                this.getCurrentBalanceOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCurrentBalanceOperationCompleted);
            }
            this.InvokeAsync("getCurrentBalance", new object[] {
                        in0}, this.getCurrentBalanceOperationCompleted, userState);
        }
        
        private void OngetCurrentBalanceOperationCompleted(object arg) {
            if ((this.getCurrentBalanceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getCurrentBalanceCompleted(this, new getCurrentBalanceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendBrandedSmsMessageReturn")]
        public string sendBrandedSmsMessage(string in0, BrandedSmsMessage in1) {
            object[] results = this.Invoke("sendBrandedSmsMessage", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendBrandedSmsMessageAsync(string in0, BrandedSmsMessage in1) {
            this.sendBrandedSmsMessageAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void sendBrandedSmsMessageAsync(string in0, BrandedSmsMessage in1, object userState) {
            if ((this.sendBrandedSmsMessageOperationCompleted == null)) {
                this.sendBrandedSmsMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendBrandedSmsMessageOperationCompleted);
            }
            this.InvokeAsync("sendBrandedSmsMessage", new object[] {
                        in0,
                        in1}, this.sendBrandedSmsMessageOperationCompleted, userState);
        }
        
        private void OnsendBrandedSmsMessageOperationCompleted(object arg) {
            if ((this.sendBrandedSmsMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendBrandedSmsMessageCompleted(this, new sendBrandedSmsMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendTwoWaySmsMessageReturn")]
        public string sendTwoWaySmsMessage(string in0, TwoWaySmsMessage in1) {
            object[] results = this.Invoke("sendTwoWaySmsMessage", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendTwoWaySmsMessageAsync(string in0, TwoWaySmsMessage in1) {
            this.sendTwoWaySmsMessageAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void sendTwoWaySmsMessageAsync(string in0, TwoWaySmsMessage in1, object userState) {
            if ((this.sendTwoWaySmsMessageOperationCompleted == null)) {
                this.sendTwoWaySmsMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTwoWaySmsMessageOperationCompleted);
            }
            this.InvokeAsync("sendTwoWaySmsMessage", new object[] {
                        in0,
                        in1}, this.sendTwoWaySmsMessageOperationCompleted, userState);
        }
        
        private void OnsendTwoWaySmsMessageOperationCompleted(object arg) {
            if ((this.sendTwoWaySmsMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTwoWaySmsMessageCompleted(this, new sendTwoWaySmsMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("scheduleBrandedSmsMessageReturn")]
        public string scheduleBrandedSmsMessage(string in0, BrandedSmsMessage in1, long in2) {
            object[] results = this.Invoke("scheduleBrandedSmsMessage", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void scheduleBrandedSmsMessageAsync(string in0, BrandedSmsMessage in1, long in2) {
            this.scheduleBrandedSmsMessageAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void scheduleBrandedSmsMessageAsync(string in0, BrandedSmsMessage in1, long in2, object userState) {
            if ((this.scheduleBrandedSmsMessageOperationCompleted == null)) {
                this.scheduleBrandedSmsMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnscheduleBrandedSmsMessageOperationCompleted);
            }
            this.InvokeAsync("scheduleBrandedSmsMessage", new object[] {
                        in0,
                        in1,
                        in2}, this.scheduleBrandedSmsMessageOperationCompleted, userState);
        }
        
        private void OnscheduleBrandedSmsMessageOperationCompleted(object arg) {
            if ((this.scheduleBrandedSmsMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.scheduleBrandedSmsMessageCompleted(this, new scheduleBrandedSmsMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("scheduleTwoWaySmsMessageReturn")]
        public string scheduleTwoWaySmsMessage(string in0, TwoWaySmsMessage in1, long in2) {
            object[] results = this.Invoke("scheduleTwoWaySmsMessage", new object[] {
                        in0,
                        in1,
                        in2});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void scheduleTwoWaySmsMessageAsync(string in0, TwoWaySmsMessage in1, long in2) {
            this.scheduleTwoWaySmsMessageAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void scheduleTwoWaySmsMessageAsync(string in0, TwoWaySmsMessage in1, long in2, object userState) {
            if ((this.scheduleTwoWaySmsMessageOperationCompleted == null)) {
                this.scheduleTwoWaySmsMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnscheduleTwoWaySmsMessageOperationCompleted);
            }
            this.InvokeAsync("scheduleTwoWaySmsMessage", new object[] {
                        in0,
                        in1,
                        in2}, this.scheduleTwoWaySmsMessageOperationCompleted, userState);
        }
        
        private void OnscheduleTwoWaySmsMessageOperationCompleted(object arg) {
            if ((this.scheduleTwoWaySmsMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.scheduleTwoWaySmsMessageCompleted(this, new scheduleTwoWaySmsMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendBrandedSmsMessagesReturn")]
        public string[] sendBrandedSmsMessages(string in0, BrandedSmsMessage[] in1) {
            object[] results = this.Invoke("sendBrandedSmsMessages", new object[] {
                        in0,
                        in1});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void sendBrandedSmsMessagesAsync(string in0, BrandedSmsMessage[] in1) {
            this.sendBrandedSmsMessagesAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void sendBrandedSmsMessagesAsync(string in0, BrandedSmsMessage[] in1, object userState) {
            if ((this.sendBrandedSmsMessagesOperationCompleted == null)) {
                this.sendBrandedSmsMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendBrandedSmsMessagesOperationCompleted);
            }
            this.InvokeAsync("sendBrandedSmsMessages", new object[] {
                        in0,
                        in1}, this.sendBrandedSmsMessagesOperationCompleted, userState);
        }
        
        private void OnsendBrandedSmsMessagesOperationCompleted(object arg) {
            if ((this.sendBrandedSmsMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendBrandedSmsMessagesCompleted(this, new sendBrandedSmsMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendTwoWaySmsMessagesReturn")]
        public string[] sendTwoWaySmsMessages(string in0, TwoWaySmsMessage[] in1) {
            object[] results = this.Invoke("sendTwoWaySmsMessages", new object[] {
                        in0,
                        in1});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void sendTwoWaySmsMessagesAsync(string in0, TwoWaySmsMessage[] in1) {
            this.sendTwoWaySmsMessagesAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void sendTwoWaySmsMessagesAsync(string in0, TwoWaySmsMessage[] in1, object userState) {
            if ((this.sendTwoWaySmsMessagesOperationCompleted == null)) {
                this.sendTwoWaySmsMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTwoWaySmsMessagesOperationCompleted);
            }
            this.InvokeAsync("sendTwoWaySmsMessages", new object[] {
                        in0,
                        in1}, this.sendTwoWaySmsMessagesOperationCompleted, userState);
        }
        
        private void OnsendTwoWaySmsMessagesOperationCompleted(object arg) {
            if ((this.sendTwoWaySmsMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTwoWaySmsMessagesCompleted(this, new sendTwoWaySmsMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendBrandedSmsMessageListReturn")]
        public string sendBrandedSmsMessageList(string in0, BrandedSmsMessageList in1) {
            object[] results = this.Invoke("sendBrandedSmsMessageList", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendBrandedSmsMessageListAsync(string in0, BrandedSmsMessageList in1) {
            this.sendBrandedSmsMessageListAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void sendBrandedSmsMessageListAsync(string in0, BrandedSmsMessageList in1, object userState) {
            if ((this.sendBrandedSmsMessageListOperationCompleted == null)) {
                this.sendBrandedSmsMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendBrandedSmsMessageListOperationCompleted);
            }
            this.InvokeAsync("sendBrandedSmsMessageList", new object[] {
                        in0,
                        in1}, this.sendBrandedSmsMessageListOperationCompleted, userState);
        }
        
        private void OnsendBrandedSmsMessageListOperationCompleted(object arg) {
            if ((this.sendBrandedSmsMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendBrandedSmsMessageListCompleted(this, new sendBrandedSmsMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("sendTwoWaySmsMessageListReturn")]
        public string sendTwoWaySmsMessageList(string in0, TwoWaySmsMessageList in1) {
            object[] results = this.Invoke("sendTwoWaySmsMessageList", new object[] {
                        in0,
                        in1});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void sendTwoWaySmsMessageListAsync(string in0, TwoWaySmsMessageList in1) {
            this.sendTwoWaySmsMessageListAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void sendTwoWaySmsMessageListAsync(string in0, TwoWaySmsMessageList in1, object userState) {
            if ((this.sendTwoWaySmsMessageListOperationCompleted == null)) {
                this.sendTwoWaySmsMessageListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsendTwoWaySmsMessageListOperationCompleted);
            }
            this.InvokeAsync("sendTwoWaySmsMessageList", new object[] {
                        in0,
                        in1}, this.sendTwoWaySmsMessageListOperationCompleted, userState);
        }
        
        private void OnsendTwoWaySmsMessageListOperationCompleted(object arg) {
            if ((this.sendTwoWaySmsMessageListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.sendTwoWaySmsMessageListCompleted(this, new sendTwoWaySmsMessageListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllSmsMessageRepliesReturn")]
        public SmsReply[] getAllSmsMessageReplies(string in0, bool in1) {
            object[] results = this.Invoke("getAllSmsMessageReplies", new object[] {
                        in0,
                        in1});
            return ((SmsReply[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllSmsMessageRepliesAsync(string in0, bool in1) {
            this.getAllSmsMessageRepliesAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void getAllSmsMessageRepliesAsync(string in0, bool in1, object userState) {
            if ((this.getAllSmsMessageRepliesOperationCompleted == null)) {
                this.getAllSmsMessageRepliesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllSmsMessageRepliesOperationCompleted);
            }
            this.InvokeAsync("getAllSmsMessageReplies", new object[] {
                        in0,
                        in1}, this.getAllSmsMessageRepliesOperationCompleted, userState);
        }
        
        private void OngetAllSmsMessageRepliesOperationCompleted(object arg) {
            if ((this.getAllSmsMessageRepliesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllSmsMessageRepliesCompleted(this, new getAllSmsMessageRepliesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("getSmsMessageRepliesReturn")]
        public SmsReply[] getSmsMessageReplies(string in0, string in1, bool in2) {
            object[] results = this.Invoke("getSmsMessageReplies", new object[] {
                        in0,
                        in1,
                        in2});
            return ((SmsReply[])(results[0]));
        }
        
        /// <remarks/>
        public void getSmsMessageRepliesAsync(string in0, string in1, bool in2) {
            this.getSmsMessageRepliesAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void getSmsMessageRepliesAsync(string in0, string in1, bool in2, object userState) {
            if ((this.getSmsMessageRepliesOperationCompleted == null)) {
                this.getSmsMessageRepliesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetSmsMessageRepliesOperationCompleted);
            }
            this.InvokeAsync("getSmsMessageReplies", new object[] {
                        in0,
                        in1,
                        in2}, this.getSmsMessageRepliesOperationCompleted, userState);
        }
        
        private void OngetSmsMessageRepliesOperationCompleted(object arg) {
            if ((this.getSmsMessageRepliesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getSmsMessageRepliesCompleted(this, new getSmsMessageRepliesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("getInboundSmsMessagesReturn")]
        public InboundSmsMessage[] getInboundSmsMessages(string in0, string in1, bool in2) {
            object[] results = this.Invoke("getInboundSmsMessages", new object[] {
                        in0,
                        in1,
                        in2});
            return ((InboundSmsMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void getInboundSmsMessagesAsync(string in0, string in1, bool in2) {
            this.getInboundSmsMessagesAsync(in0, in1, in2, null);
        }
        
        /// <remarks/>
        public void getInboundSmsMessagesAsync(string in0, string in1, bool in2, object userState) {
            if ((this.getInboundSmsMessagesOperationCompleted == null)) {
                this.getInboundSmsMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInboundSmsMessagesOperationCompleted);
            }
            this.InvokeAsync("getInboundSmsMessages", new object[] {
                        in0,
                        in1,
                        in2}, this.getInboundSmsMessagesOperationCompleted, userState);
        }
        
        private void OngetInboundSmsMessagesOperationCompleted(object arg) {
            if ((this.getInboundSmsMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInboundSmsMessagesCompleted(this, new getInboundSmsMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="urn:SmsGateway", ResponseNamespace="urn:SmsGateway")]
        [return: System.Xml.Serialization.SoapElementAttribute("getAllInboundSmsMessagesReturn")]
        public InboundSmsMessage[] getAllInboundSmsMessages(string in0, bool in1) {
            object[] results = this.Invoke("getAllInboundSmsMessages", new object[] {
                        in0,
                        in1});
            return ((InboundSmsMessage[])(results[0]));
        }
        
        /// <remarks/>
        public void getAllInboundSmsMessagesAsync(string in0, bool in1) {
            this.getAllInboundSmsMessagesAsync(in0, in1, null);
        }
        
        /// <remarks/>
        public void getAllInboundSmsMessagesAsync(string in0, bool in1, object userState) {
            if ((this.getAllInboundSmsMessagesOperationCompleted == null)) {
                this.getAllInboundSmsMessagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllInboundSmsMessagesOperationCompleted);
            }
            this.InvokeAsync("getAllInboundSmsMessages", new object[] {
                        in0,
                        in1}, this.getAllInboundSmsMessagesOperationCompleted, userState);
        }
        
        private void OngetAllInboundSmsMessagesOperationCompleted(object arg) {
            if ((this.getAllInboundSmsMessagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getAllInboundSmsMessagesCompleted(this, new getAllInboundSmsMessagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SmsGateway")]
    public partial class BrandedSmsMessage : SmsMessage {
        
        private string senderIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string senderId {
            get {
                return this.senderIdField;
            }
            set {
                this.senderIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(BrandedSmsMessage))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TwoWaySmsMessage))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SmsGateway")]
    public abstract partial class SmsMessage {
        
        private string messageField;
        
        private string[] mobilesField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string[] mobiles {
            get {
                return this.mobilesField;
            }
            set {
                this.mobilesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SmsGateway")]
    public partial class InboundSmsMessage {
        
        private string inboundNumberField;
        
        private string messageField;
        
        private string mobileField;
        
        private long whenField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string inboundNumber {
            get {
                return this.inboundNumberField;
            }
            set {
                this.inboundNumberField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public long when {
            get {
                return this.whenField;
            }
            set {
                this.whenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SmsGateway")]
    public partial class SmsReply {
        
        private string messageField;
        
        private string messageIdField;
        
        private string mobileField;
        
        private long whenField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
        
        /// <remarks/>
        public long when {
            get {
                return this.whenField;
            }
            set {
                this.whenField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SmsGateway")]
    public partial class SmsMessageMobile {
        
        private string messageField;
        
        private string mobileField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string mobile {
            get {
                return this.mobileField;
            }
            set {
                this.mobileField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(TwoWaySmsMessageList))]
    [System.Xml.Serialization.SoapIncludeAttribute(typeof(BrandedSmsMessageList))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SmsGateway")]
    public abstract partial class SmsMessageList {
        
        private SmsMessageMobile[] messagesField;
        
        private string templateField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public SmsMessageMobile[] messages {
            get {
                return this.messagesField;
            }
            set {
                this.messagesField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string template {
            get {
                return this.templateField;
            }
            set {
                this.templateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SmsGateway")]
    public partial class TwoWaySmsMessageList : SmsMessageList {
        
        private string messageIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SmsGateway")]
    public partial class BrandedSmsMessageList : SmsMessageList {
        
        private string senderIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string senderId {
            get {
                return this.senderIdField;
            }
            set {
                this.senderIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.4084.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn:SmsGateway")]
    public partial class TwoWaySmsMessage : SmsMessage {
        
        private string messageIdField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string messageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void connectCompletedEventHandler(object sender, connectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class connectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal connectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void disconnectCompletedEventHandler(object sender, disconnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class disconnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal disconnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void connectWithLicenceCompletedEventHandler(object sender, connectWithLicenceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class connectWithLicenceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal connectWithLicenceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void reconnectCompletedEventHandler(object sender, reconnectCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class reconnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal reconnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getCurrentBalanceCompletedEventHandler(object sender, getCurrentBalanceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getCurrentBalanceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getCurrentBalanceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public double Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((double)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendBrandedSmsMessageCompletedEventHandler(object sender, sendBrandedSmsMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendBrandedSmsMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendBrandedSmsMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendTwoWaySmsMessageCompletedEventHandler(object sender, sendTwoWaySmsMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendTwoWaySmsMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendTwoWaySmsMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void scheduleBrandedSmsMessageCompletedEventHandler(object sender, scheduleBrandedSmsMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class scheduleBrandedSmsMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal scheduleBrandedSmsMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void scheduleTwoWaySmsMessageCompletedEventHandler(object sender, scheduleTwoWaySmsMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class scheduleTwoWaySmsMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal scheduleTwoWaySmsMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendBrandedSmsMessagesCompletedEventHandler(object sender, sendBrandedSmsMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendBrandedSmsMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendBrandedSmsMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendTwoWaySmsMessagesCompletedEventHandler(object sender, sendTwoWaySmsMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendTwoWaySmsMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendTwoWaySmsMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendBrandedSmsMessageListCompletedEventHandler(object sender, sendBrandedSmsMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendBrandedSmsMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendBrandedSmsMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void sendTwoWaySmsMessageListCompletedEventHandler(object sender, sendTwoWaySmsMessageListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class sendTwoWaySmsMessageListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal sendTwoWaySmsMessageListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAllSmsMessageRepliesCompletedEventHandler(object sender, getAllSmsMessageRepliesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllSmsMessageRepliesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllSmsMessageRepliesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SmsReply[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmsReply[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getSmsMessageRepliesCompletedEventHandler(object sender, getSmsMessageRepliesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getSmsMessageRepliesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getSmsMessageRepliesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SmsReply[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SmsReply[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getInboundSmsMessagesCompletedEventHandler(object sender, getInboundSmsMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInboundSmsMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInboundSmsMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InboundSmsMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InboundSmsMessage[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    public delegate void getAllInboundSmsMessagesCompletedEventHandler(object sender, getAllInboundSmsMessagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.4084.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getAllInboundSmsMessagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getAllInboundSmsMessagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public InboundSmsMessage[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InboundSmsMessage[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591